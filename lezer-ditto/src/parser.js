// This file was generated by lezer-generator. You probably shouldn't edit it.
import { LRParser } from "@lezer/lr";
const spec_name = {
  __proto__: null,
  module: 8,
  exports: 12,
  import: 28,
  as: 32,
  type: 38,
  alias: 80,
  foreign: 84,
  let: 96,
  in: 110,
  fn: 114,
  match: 122,
  with: 124,
  end: 128,
  do: 132,
  return: 146,
  if: 150,
  then: 152,
  else: 154,
  true: 178,
  false: 182,
  unit: 186,
};
export const parser = LRParser.deserialize({
  version: 14,
  states:
    "!!YOYQPOOQ_QPOOOmQPO'#C_OOQO'#Ef'#EfQ_QPOOOOQO'#FQ'#FQOOQO'#D['#D[OOQO'#FP'#FPOOQO'#Eg'#EgQbQPOOOrQPO'#CiOzQPO'#DSO!SQPO'#DVO!XQPO'#DZO!aQPO'#CaO#RQPO,58yOOQO-E8d-E8dOOQO-E8e-E8eO#WQQO'#CkO#]QPO,59TOmQPO,59TOOQO'#Cp'#CpO#wQPO,59nO}QPO,59oOOQO'#DX'#DXO![QPO,59qO$]QPO'#DYO$kQPO,59uO%oQPO,59uO%tQPO'#EdO%yQPO,58{O&kQPO1G.eO&sQPO,59VOOQO'#Cc'#CcO&xQPO'#CdOOQO'#Ex'#ExOOQO1G.o1G.oO'QQPO1G.oO'VQPO1G.oO'qQPO'#CqO'vQPO1G.tO(OQPO1G/YO(aQPO1G/ZOOQO1G/]1G/]O(iQPO'#FWO(zQPO'#CzOOQO'#Cx'#CxO)oQPO'#CxOOQO'#C{'#C{O)tQPO'#FVO*fQPO'#C}OOQO'#FV'#FVOOQO'#FT'#FTOOQO,59t,59tO*nQPO'#EOOOQO'#D}'#D}O,OQPO'#D}O,WQPO'#FcO-eQPO'#FeO/gQPO'#ETOOQO'#E_'#E_OOQO'#E^'#E^O/qQPO'#E`OOQO'#Ff'#FfOOQO'#Fe'#FeO/xQPO'#F_OOQO'#Fc'#FcOOQO'#F_'#F_OOQO'#F['#F[O1SQPO'#D]O1_QPO'#DfO$kQPO'#DjO1dQPO'#DoO$kQPO'#DxO$kQPO'#FgOOQO'#EW'#EWOOQO'#EY'#EYOOQO'#E['#E[OOQO1G/a1G/aO$kQPO1G/aOOQO,5;O,5;OOOQO-E8b-E8bOOQO7+$P7+$POOQO1G.q1G.qOOQO'#Cf'#CfO1iQPO'#CeOOQO'#Ch'#ChOOQO'#E{'#E{O1tQPO,59OOOQO'#Cm'#CmO1|QPO7+$ZOOQO7+$Z7+$ZO'QQPO7+$ZOOQO'#Cr'#CrO2eQPO,59]OOQO'#Ct'#CtO2mQPO'#CsO3RQPO7+$`O3dQPO7+$`O3iQPO7+$`O$]QPO7+$uO3qQPO7+$uO3vQPO,59bO3{QPO,5;rOOQO,59e,59eOOQO'#Cz'#CzOOQO,59d,59dO$]QPO'#C|OOQO,59c,59cO4TQPO'#DPO4]QPO'#DOOOQO,59i,59iO4bQPO,59iO4jQPO,59lOOQO'#EO'#EOOOQO,5:i,5:iOOQO,5:x,5:xO4oQPO'#EQOOQO,5:k,5:kO4vQPO,5:mO4{QPO,5:qO5TQPO'#ESOOQO,5:o,5:oO5cQPO,5:oO5kQPO'#EUOOQO,5:z,5:zO5pQPO,5:zO5xQPO,5:hO6PQPO'#DaO6hQPO'#D`O6|QPO'#D`OOQO'#Dc'#DcOOQO'#Dd'#DdOOQO'#F]'#F]OOQO'#El'#ElO7RQPO,59wO7aQPO'#D_O7iQPO,5:QO7wQPO,5:UO7|QPO,5:ZO8gQPO,5:dO8lQPO,5<ROOQO7+${7+${OOQO'#Cg'#CgOOQO,59P,59PO8qQPO1G.jO8|QPO1G.jOOQO1G.j1G.jOOQO<<Gu<<GuO9UQPO<<GuO9mQPO1G.wO9uQPO1G.wOOQO1G.w1G.wO$]QPO'#CuOOQO,59_,59_O3dQPO'#EkO9}QPO<<GzO9}QPO<<GzO3dQPO<<GzOOQO<<Ha<<HaO$]QPO<<HaO$]QPO1G.|O:`QPO1G.|O:qQPO1G.|O:yQPO1G1^O;hQPO,59hO$]QPO,59jO;pQPO1G/TO;xQPO1G/TOOQO1G/T1G/TO<QQPO1G/WOOQO,5:l,5:lO<VQPO,5:lOOQO'#ES'#ESOOQO1G0X1G0XO4vQPO1G0]O<_QPO1G0ZO<gQPO1G0ZOOQO1G0Z1G0ZO$kQPO,5:pO<oQPO1G0fO<wQPO1G0fOOQO1G0f1G0fO=OQPO1G0SO>]QPO'#DbOOQO,59z,59zOOQO'#Da'#DaO>kQPO,59zOOQO-E8j-E8jO$kQPO1G/cO$kQPO,59yO?PQPO,59yO?UQPO'#DhO?aQPO1G/lO?iQPO1G/lO?qQPO1G/pO?vQPO'#DrO@[QPO'#DuOOQO'#F`'#F`O@dQPO'#DqO1SQPO'#DsO$kQPO'#DvO@iQPO1G/uO$kQPO1G0OOOQO1G1m1G1mOOQO,5;P,5;POOQO7+$U7+$UO@nQPO7+$UOOQO-E8c-E8cOOQOAN=aAN=aOOQO,5;S,5;SOOQO7+$c7+$cO@yQPO7+$cOOQO-E8f-E8fOARQPO,59aOOQO,5;V,5;VOOQO-E8i-E8iOAZQPOAN=fOAZQPOAN=fOOQOAN={AN={OOQO7+$h7+$hOOQO,5;T,5;TOAlQPO7+$hOAqQPO7+$hOOQO-E8g-E8gO$]QPO7+$hOBSQPO1G/SOBeQPO1G/SOOQO1G/S1G/SOOQO1G/U1G/UOOQO'#DP'#DPOOQO,5;U,5;UOOQO7+$o7+$oOBmQPO7+$oOOQO-E8h-E8hOBuQPO7+$rOB}QPO1G0WOCVQPO1G0WOOQO1G0W1G0WOC^QPO7+%wOOQO,5;],5;]OOQO7+%u7+%uOCfQPO7+%uOOQO-E8o-E8oOOQO1G0[1G0[OOQO-E8n-E8nOCnQPO7+&QOOQO7+&Q7+&QOOQO,5;[,5;[OOQO,59|,59|OCuQPO,59|OOQO1G/f1G/fOOQO7+$}7+$}OOQO1G/e1G/eO$kQPO1G/eOOQO,5:S,5:SOC}QPO'#DiO$kQPO7+%WOD]QPO7+%WODbQPO7+%WODpQPO7+%WODxQPO7+%WOOQO'#Eo'#EoOEQQPO7+%[O1SQPO'#DmO7|QPO,5:aO$kQPO,5:]OEYQPO'#DtOEbQPO,5:_OOQO,5:b,5:bOOQO7+%a7+%aOEgQPO7+%jOOQO<<Gp<<GpP&xQPO'#EeOOQO<<G}<<G}P'qQPO'#EhOElQPO1G.{OE}QPO1G.{OOQO1G.{1G.{OFVQPOG23QO$]QPO<<HSOFhQPO<<HSP$]QPO'#EiOOQO<<HS<<HSOOQO7+$n7+$nOFmQPO7+$nOOQO<<HZ<<HZP<QQPO'#EjOGOQPO<<H^OGWQPO<<H^OOQO<<H^<<H^OG`QPO7+%rOOQO7+%r7+%rOGgQPO<<IcOGoQPO<<IcOOQO<<Ic<<IcOOQO<<Ia<<IaP4vQPO'#EqP$kQPO'#EpOOQO<<Il<<IlOGwQPO1G/hOHVQPO1G/hOOQO1G/h1G/hOOQO7+%P7+%PO$]QPO'#FWOOQO,5:T,5:TOOQO<<Hr<<HrO$kQPO<<HrOOQO,5;Y,5;YOH_QPO<<HrOHgQPO<<HrOOQO-E8l-E8lOHuQPO<<HrOOQO-E8m-E8mOOQO<<Hv<<HvOHzQPO,5:XOOQO1G/{1G/{OIPQPO1G/wOOQO,5:`,5:`O$kQPO1G/yO$kQPO<<IUOOQO7+$g7+$gOIUQPO7+$gOOQOAN=nAN=nO$]QPOAN=nOOQO<<HY<<HYOOQOAN=xAN=xOIgQPOAN=xOOQO<<I^<<I^OOQOAN>}AN>}OIoQPOAN>}OOQO,5;X,5;XOOQO7+%S7+%SOIwQPO7+%SOOQO-E8k-E8kOJVQPO,5;rOOQOAN>^AN>^O$kQPOAN>^OJ[QPOAN>^OJaQPOAN>^P1SQPO'#EnO$kQPO1G/sO7|QPO7+%cOJiQPO7+%eOOQOAN>pAN>pOOQO<<HR<<HROOQOG23YG23YOOQOG23dG23dOOQOG24iG24iOOQO<<Hn<<HnP1SQPO'#EmOOQO1G1^1G1^OOQOG23xG23xO$kQPOG23xOJnQPOG23xOOQO7+%_7+%_OOQO<<H}<<H}O7|QPO<<IPOOQOLD)dLD)dO$kQPOLD)dOOQOAN>kAN>kOOQO!$'MO!$'MO",
  stateData:
    "Jv~O#hOSPOS~OSQO~O^YOcZOz[O#iUO~O#j^O~O#j^O#nbO~OxgO#jeO~O#ihO~O#ukO#|jO~O#kmOUTX^TX`TXcTXzTX#fTX#iTX#mTX#nTX~OUoO~O#rpO~O`uO#mqO#nrO^]ac]az]a#f]a#i]a~O#nwO#uxOcvazva#fva#iva~O#i!QO#j}O#n|O#{!SO~O!Q!gO!Z!hO!_!iO!d!jO!m!kO!{!mO!}!nO#P!oO#T!aO#U!aO#V!aO#i!^O#j!WO#n!lO#{!]O$[!`O~O#u!qO~O#j!rO~O#kmOUTa^Ta`TacTazTa#fTa#iTa#mTa#nTa~O#mqO#nrO~O#q!uO~O#i!xO#j!vO~O#j!{O~O`#OO#mqO#nrO^]ic]iz]i#f]i#i]i~O#i#PO~O#j#RO#v#UO~O#u#VOcvizvi#fvi#ivi~O#nwO#u#WO~O#i!QO#j}O#n|O#q#YO#{!SO~O#k#[O#nnX#unXcnXznX#fnX#inX#pnX#qnX#}nX#xnX~O#j#]O~O#n#_O#u#yXc#yXz#yX#f#yX#i#yX#p#yX#q#yX#}#yX#x#yX~O#i#aO#}#cO~O#k#[Oc!rXz!rX#f!rX#i!rX#n!rX$W!rX#v!rX#p!rX$]!rX!`!rX!n!rX#q!rX#}!rX$U!rX!X!rX#j!rX$Q!rX!o!rX!b!rX~O#i!^O#j#fO~O#n#iOc$VXz$VX#f$VX#i$VX$W$VX#p$VX$]$VX!`$VX!n$VX#q$VX#}$VX$U$VX!X$VX#j$VX$Q$VX!o$VX!b$VX#v$VX~O#k#kOc$XXz$XX#f$XX#i$XX#n$XX$W$XX#v$XX#p$XX$]$XX!`$XX!n$XX#q$XX#}$XX$U$XX!X$XX#j$XX$Q$XX!o$XX!b$XX~O!{!mO!}!nO#P!oO#T!aO#U!aO#V!aO#j!WO#n!lO#{!]O$[!`O~O#i#mO#}#nO~P.uO$]#qO~P$kO$W#sOc$RXz$RX#f$RX#i$RX#p$RX$]$RX!`$RX!n$RX#q$RX#}$RX$U$RX!X$RX#j$RX$Q$RX!o$RX!b$RX#v$RX~O#i#wO#j#tO$Q#xO~O#n#}O~O#{$PO~O#m$TO#pXX#qXX~O#p$VO#q$XO~O#mqO#nrO^]qc]qz]q#f]q#i]q~O#p$[O#q$^O~O#n$_OcgXzgX#fgX#igX#vgX~O#v$aOcbqzbq#fbq#ibq~O#j#RO~O#j#RO#v$dO~O#u$fO~O#x$gO~O#p$hO#q$jO~O#vuX#|sX~O#|$lO~O#p$mO#}$oO~O#v$pO~O#q$qO~P$kO#i$sO~O#n#iO#v$uO~O#k#RX#n#RX#u!vX#v#RX~O#p$vO#}$xO~O#u$yO~O#p${O$]$|O~O#i!^O~P.uO#k#[O#n!TX#u!TX#|!TX#p!TX#q!TX#x!TX~O#n%OO#u!SX#|!SX#p!SX#q!SX#x!SX~O#j%QO~O!X%TO#i#wO#j#tO$Q#xO~O#u%UO#|jO~O#i#wO#j#tO#q%XO$Q#xO~O!`%ZO~O!Q%`O!Z!hO!_!iO!d!jO!k%aO!m!kO#i%[O~P.uO!n%cO~O#q%dO~O#i!xO#j!vO#q%fO~O#p%gO#q%fO~O#mqO#nrO^]yc]yz]y#f]y#i]y~O#i#PO#q%kO~O#p%lO#q%kO~O#v$aOcbyzby#fby#iby~O#i!QO#j}O#n|O#q%vO#{!SO~O#p%wO#q%vO~O#x%yO#u#zic#ziz#zi#f#zi#i#zi#p#zi#q#zi#}#zi~O#p%zO#q%|O~O#i&OO#}&QO~O#p&RO#}&QO~O#i&OO~O#p&VO#q&WO~O#i$sO#}&ZO~O#p&[O#}&ZO~O#p&`O$]&aO~O$]&aO~P$kO#n#iOc!piz!pi#f!pi#i!pi$W!pi#p!pi$]!pi!`!pi!n!pi#q!pi#}!pi$U!pi!X!pi#j!pi$Q!pi!o!pi!b!pi#v!pi~O#i#wO#j#tO#q&cO$Q#xO~O#n%OO#u!Sa#|!Sa#p!Sa#q!Sa#x!Sa~O#u&hO~O#|jO#p![X#q![X~O#x&kO#|&jO~O#p&mO#q&oO~O#v&rO~O#k#RX#n#RX#}#RX$T!fX$U#RX$W#RX~O$U&sO#}!iX~O$T&tO~O#}&xO~O#i!xO#j!vO#q&zO~O#i#PO#q&|O~O#p'OO#q'QO~O#v$aOcb!Rzb!R#fb!R#ib!R~O#x'SO~O#i!QO#j}O#n|O#q'TO#{!SO~O#i!QO#j}O#n|O#q'WO#{!SO~O#p'XO#q'WO~O#i&OO#}'YO~O#p'[O#}'^O~O#p'_O#q'`O~O#q'`O~P$kO#p'aO#}'cO~O#i$sO#}'dO~O$]'gO~P$kO#p'hO#q'jO~O#i!QO#j}O#n'lO#{!SO~O#x'oO~O#i#wO#j#tO#q'qO$Q#xO~O#p'rO#q'qO~O#x'oO#|&jO~O!b'vO#v&rO~O#|jO#u!hX~O#u'{O~O!o'|O~O#i!QO#j}O#n|O#q'}O#{!SO~O#p(OO#q'}O~O#v$aOcb!Zzb!Z#fb!Z#ib!Z~O#x(QO~O#i!QO#j}O#n|O#q(RO#{!SO~O#i&OO#}(SO~O#p(TO#}(SO~O#q(UO~P$kO#i$sO#}(VO~O#p(WO#}(VO~O#i#wO#j#tO#q(YO$Q#xO~O#p(ZO#q(YO~O#x(_O#|&jO~O#i#wO#j#tO#q(aO$Q#xO~O#x(_O~O#x(cO~O$U(dO~O#i!QO#j}O#n|O#q(gO#{!SO~O#i&OO#}(iO~O#i$sO#}(jO~O#i#wO#j#tO#q(kO$Q#xO~O#q(mO~O#x(oO~O#x(oO#|&jO~O$U(sO~O#x(uO~O#V#U~",
  goto: "<q$[PPP$]P$`P$i$i$p$v$|$p%PP%TP%W%^P%c%i%o%w&U&]&`&u']'s)^'])w&u)z*X&u*b%^*eP*eP*j*m*e*|+RP+p+t,S,e+t+tP,kP-^-f,kPP-rP,kP-v-|-v.S-v-vP,kPPP.V.x/m0e1Y0e1_0e1k0e0eP0eP0eP0e1x0ePPP2p2v2|3S3Z3a3o3y4X4_4e4k4q4{PPPPPP5VPP5fPPP5n*ePP5sP6r&uPPP7[8wP9a:UPP:bP;T;|0eRPOQ_QQcYRvdZscov!|$ZX!yr$V%g&{X!wr$V%g&{R$U!wTRPSRdYQ!|uR$Z#OVTPSXQfZRzgQyfR#XzQ#QwV%j$[%l&}Q#TxS$c#U#VQ%o$aR%r$dZ#Sx#U#V$a$dR$`#Sw!Uj|#W#_$_$f$g$h$l%w%y%z'O'S'U'X'l(O(Qy!Tj|#W#_$_$f$g$h$l%w%y%z&j'O'S'U'X'l(O(Qy!Rj|#W#_$_$f$g$h$l%w%y%z&j'O'S'U'X'l(O(Qx!Pj|#W#_$_$f$g$h$l%w%y%z&j'O'S'U'X'l(O(Q!d!Yk!]!`!i!k!l!q#i#s$P$y${%T%U%a%c&V&`&h&k&s&t'_'f'o'{'|(_(c(d(o(s(ui#v!g#{#}%O%`&m&r'h'r(Z(b(lx!Oj|#W#_$_$f$g$h$l%w%y%z&j'O'S'U'X'l(O(QR#^!PR#`!RQ#d!SY&P$m&R'Z'[(TR&T$p_#b!S$m$p&R'Z'[(TR#e!SVVPSXRi[Ql]Q{iQ%V#|Q&i%WR'z&uV]PSX!X!fk!`!i!k!l!q#i$y${%T%U%a%c&V&`&h&k&t'_'f'o'{'|(_(c(o(uT#z!g#{i#y!g#{#}%O%`&m&r'h'r(Z(b(lh#u!g#{#}%O%`&m&r'h'r(Z(b(lR%R#vQ%P#uR&e%R!a!ek!`!i!k!l!q#i$P$y${%T%U%a%c&V&`&h&k&s&t'_'f'o'{'|(_(c(d(o(s(uQ%Y#}V'p&m'r(bQ&l%XQ't&oQ(`'qR(p(aT&p%Z&qX%^$P&s(d(sX%_$P&s(d(sR&v%`!a!dk!`!i!k!l!q#i$P$y${%T%U%a%c&V&`&h&k&s&t'_'f'o'{'|(_(c(d(o(s(u!e!bk!]!`!i!k!l!q#i#s$P$y${%T%U%a%c&V&`&h&k&s&t'_'f'o'{'|(_(c(d(o(s(u!d!Xk!]!`!i!k!l!q#i#s$P$y${%T%U%a%c&V&`&h&k&s&t'_'f'o'{'|(_(c(d(o(s(uR#g!Y!e!ak!]!`!i!k!l!q#i#s$P$y${%T%U%a%c&V&`&h&k&s&t'_'f'o'{'|(_(c(d(o(s(uV#j!Z#l$}^#p!]$u$v&['a'e(WR$t#kQ#o!]Q&X$uZ&Y$v&['a'e(W!d!_k!]!`!i!k!l!q#i#s$P$y${%T%U%a%c&V&`&h&k&s&t'_'f'o'{'|(_(c(d(o(s(uR#h!YQn^R!snQ$W!zR%h$WQSPR`SSXPSRaXQ$]#QR%m$]Q$i#ZU%x$i%{'PQ%{$kR'P%nQ$n#dS&S$n']R']&TQ$b#TU%p$b%q'RQ%q$cR'R%rQ#{!gR%S#{Q'i&dR(['iQ&n%YR's&nQ&q%ZR'u&qQ$z#rQ&U$rT&_$z&UQ$w#oS&]$w'bR'b&XQtcQ!toQ!}vQ$Y!|R%i$ZQ!zrV%e$V%g&{VWPSXQ!VjQ#Z|Q$e#WQ$k#_Q%n$_Q%s$fQ%t$g^%u$h%w%z'O'U'X(OQ%}$lQ'V%yQ(P'SQ(]'lR(h(Qv!Uj|#W#_$_$f$g$h$l%w%y%z'O'S'U'X'l(O(QR'm&jQ!pkQ#r!`Q$O!iQ$Q!kQ$R!lQ$S!qQ$r#iQ&^$yY&b${&V&`'_'fQ&f%TQ&g%UQ&w%aQ&y%cQ'k&hQ'n&kQ'y&tQ(^'oQ(e'{Q(f'|Q(n(_Q(q(cQ(t(oR(w(uS#|!g#{W%W#}&m'r(bQ&d%OQ&u%`Q'w&rV(X'h(Z(l!W!fk!`!i!k!l!q#i$y${%T%U%a%c&V&`&h&k&t'_'f'o'{'|(_(c(o(uX%]$P&s(d(sQ%b$PQ'x&sQ(r(dR(v(s!a!ck!`!i!k!l!q#i$P$y${%T%U%a%c&V&`&h&k&s&t'_'f'o'{'|(_(c(d(o(s(u!`!Zk!`!i!k!l!q#i$P$y${%T%U%a%c&V&`&h&k&s&t'_'f'o'{'|(_(c(d(o(s(uQ#l!]R$}#s!e![k!]!`!i!k!l!q#i#s$P$y${%T%U%a%c&V&`&h&k&s&t'_'f'o'{'|(_(c(d(o(s(u",
  nodeNames:
    "⚠ Comment SourceFile ModuleHeader module ModuleName exports ExposingEverything ExposingList ExposingListItemType ExposingListItemTypeName ExposingListItemTypeConstructors ExposingListItemValue ModuleImport import ModuleImportPackage as ModuleImportAlias TypeDeclaration type TypeDeclarationName TypeDeclarationVariables TypeDeclarationVariable TypeDeclarationConstructor TypeDeclarationConstructorName TypeDeclarationConstructorFields TypeFunction TypeCall TypeConstructor Qualifier TypeConstructorProperName TypeVariable TypeCallArguments TypeClosedRecord TypeRecordField TypeRecordFieldLabel TypeOpenRecord TypeOpenRecordRowVariable TypeDeclarationEmpty TypeAliasDeclaration alias ForeignValueDeclaration foreign ForeignValueDeclarationName TypeAnnotation ValueDeclaration ValueDeclarationName ExpressionLet let ExpressionLetValueDeclaration PatternConstructor PatternConstructorProperName PatternConstructorFields PatternVariable PatternUnused in ExpressionFunction fn ExpressionFunctionParameter ReturnTypeAnnotation ExpressionMatch match with ExpressionMatchArm end ExpressionEffect do ExpressionEffectBind ExpressionEffectBindName ExpressionEffectLet ExpressionEffectLetBinder ExpressionEffectExpression ExpressionEffectReturn return ExpressionIf if then else ExpressionRightPipe ExpressionConstructor ExpressionConstructorProperName ExpressionCall ExpressionCallArguments ExpressionRecordAccess ExpressionRecordFieldLabel ExpressionRecord ExpressionRecordField ExpressionRecordUpdate ExpressionTrue true ExpressionFalse false ExpressionUnit unit ExpressionVariable ExpressionVariableName ExpressionArray ExpressionString ExpressionInt ExpressionFloat",
  maxTerm: 151,
  skippedNodes: [0, 1],
  repeatNodeCount: 14,
  tokenData:
    "*h~RmX^!|pq!|rs#qxy${yz%f|}%k}!O%p!O!P&g!Q![&l![!]']!]!^'b!^!_'g!_!`'r!c!}'w!}#O(Y#P#Q(_#R#S(d#T#o(u#o#p*P#p#q*U#q#r*c#y#z!|$f$g!|#BY#BZ!|$IS$I_!|$I|$JO!|$JT$JU!|$KV$KW!|&FU&FV!|~#RY#h~X^!|pq!|#y#z!|$f$g!|#BY#BZ!|$IS$I_!|$I|$JO!|$JT$JU!|$KV$KW!|&FU&FV!|~#tVOr#qrs$Zs#O#q#O#P$`#P;'S#q;'S;=`$u<%lO#q~$`O#T~~$cP#O#P$f~$iSOY#qZ;'S#q;'S;=`$u<%lO#q~$xP;=`<%l#q~%QP#n~!O!P%T~%WP!O!P%Z~%^Pyz%a~%fO#m~~%kO#q~~%pO#p~~%sQ}!O%y!`!a&b~&OSP~OY%yZ;'S%y;'S;=`&[<%lO%y~&_P;=`<%l%y~&gO#x~~&lO#k~~&qR#U~!O!P&z!Q![&l#R#S&l~&}P!Q!['Q~'VQ#V~!Q!['Q#R#S'Q~'bO#|~~'gO$U~~'jP}!O'm~'rO$T~~'wO#u~~'|S#j~!Q!['w!c!}'w#R#S'w#T#o'w~(_O$[~~(dO$]~~(iS$Q~!Q![(d!c!}(d#R#S(d#T#o(dR(|T#iP#rQ}!O)]!Q![(u!c!}(u#R#S)n#T#o(uQ)bS#rQ}!O)]!Q![)]!c!})]#T#o)]P)sS#iP!Q![)n!c!})n#R#S)n#T#o)n~*UO#{~~*ZP#v~!`!a*^~*cO$W~~*hO#}~",
  tokenizers: [0, 1],
  topRules: { SourceFile: [0, 2] },
  specialized: [{ term: 117, get: (value) => spec_name[value] || -1 }],
  tokenPrec: 1921,
  termNames: {
    0: "⚠",
    1: "Comment",
    2: "@top",
    3: "ModuleHeader",
    4: 'name/"module"',
    5: "ModuleName",
    6: 'name/"exports"',
    7: "ExposingEverything",
    8: "ExposingList",
    9: "ExposingListItemType",
    10: "ExposingListItemTypeName",
    11: "ExposingListItemTypeConstructors",
    12: "ExposingListItemValue",
    13: "ModuleImport",
    14: 'name/"import"',
    15: "ModuleImportPackage",
    16: 'name/"as"',
    17: "ModuleImportAlias",
    18: "TypeDeclaration",
    19: 'name/"type"',
    20: "TypeDeclarationName",
    21: "TypeDeclarationVariables",
    22: "TypeDeclarationVariable",
    23: "TypeDeclarationConstructor",
    24: "TypeDeclarationConstructorName",
    25: "TypeDeclarationConstructorFields",
    26: "TypeFunction",
    27: "TypeCall",
    28: "TypeConstructor",
    29: "Qualifier",
    30: "TypeConstructorProperName",
    31: "TypeVariable",
    32: "TypeCallArguments",
    33: "TypeClosedRecord",
    34: "TypeRecordField",
    35: "TypeRecordFieldLabel",
    36: "TypeOpenRecord",
    37: "TypeOpenRecordRowVariable",
    38: "TypeDeclarationEmpty",
    39: "TypeAliasDeclaration",
    40: 'name/"alias"',
    41: "ForeignValueDeclaration",
    42: 'name/"foreign"',
    43: "ForeignValueDeclarationName",
    44: "TypeAnnotation",
    45: "ValueDeclaration",
    46: "ValueDeclarationName",
    47: "ExpressionLet",
    48: 'name/"let"',
    49: "ExpressionLetValueDeclaration",
    50: "PatternConstructor",
    51: "PatternConstructorProperName",
    52: "PatternConstructorFields",
    53: "PatternVariable",
    54: "PatternUnused",
    55: 'name/"in"',
    56: "ExpressionFunction",
    57: 'name/"fn"',
    58: "ExpressionFunctionParameter",
    59: "ReturnTypeAnnotation",
    60: "ExpressionMatch",
    61: 'name/"match"',
    62: 'name/"with"',
    63: "ExpressionMatchArm",
    64: 'name/"end"',
    65: "ExpressionEffect",
    66: 'name/"do"',
    67: "ExpressionEffectBind",
    68: "ExpressionEffectBindName",
    69: "ExpressionEffectLet",
    70: "ExpressionEffectLetBinder",
    71: "ExpressionEffectExpression",
    72: "ExpressionEffectReturn",
    73: 'name/"return"',
    74: "ExpressionIf",
    75: 'name/"if"',
    76: 'name/"then"',
    77: 'name/"else"',
    78: "ExpressionRightPipe",
    79: "ExpressionConstructor",
    80: "ExpressionConstructorProperName",
    81: "ExpressionCall",
    82: "ExpressionCallArguments",
    83: "ExpressionRecordAccess",
    84: "ExpressionRecordFieldLabel",
    85: "ExpressionRecord",
    86: "ExpressionRecordField",
    87: "ExpressionRecordUpdate",
    88: "ExpressionTrue",
    89: 'name/"true"',
    90: "ExpressionFalse",
    91: 'name/"false"',
    92: "ExpressionUnit",
    93: 'name/"unit"',
    94: "ExpressionVariable",
    95: "ExpressionVariableName",
    96: "ExpressionArray",
    97: "ExpressionString",
    98: "ExpressionInt",
    99: "ExpressionFloat",
    100: '("." properName)+',
    101: '("," exposingListItem)+',
    102: "ModuleImport+",
    103: "moduleDeclaration+",
    104: '("," TypeDeclarationVariable)+',
    105: '("," type)+',
    106: '("," TypeRecordField)+',
    107: '("|" TypeDeclarationConstructor)+',
    108: "ExpressionLetValueDeclaration+",
    109: '("," pattern)+',
    110: '("," ExpressionFunctionParameter)+',
    111: "ExpressionMatchArm+",
    112: '("," expression)+',
    113: '("," ExpressionRecordField)+',
    114: "␄",
    115: "%mainskip",
    116: "space",
    117: "name",
    118: "properName",
    119: '"."',
    120: "exposing",
    121: "everything",
    122: '"("',
    123: "exposingListItem",
    124: '","',
    125: '")"',
    126: "packageName",
    127: "moduleDeclaration",
    128: "typeDeclaration",
    129: '"="',
    130: '"|"',
    131: "type",
    132: '"->"',
    133: "type1",
    134: "typeParens",
    135: '"{"',
    136: '":"',
    137: '"}"',
    138: "expression4",
    139: "pattern",
    140: "unusedName",
    141: "expression3",
    142: "expressionEffectStatement",
    143: '"<-"',
    144: '";"',
    145: "expression2",
    146: '"|>"',
    147: "expression1",
    148: "expression0",
    149: "expressionParens",
    150: '"["',
    151: '"]"',
  },
});
