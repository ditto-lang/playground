// This file was generated by lezer-generator. You probably shouldn't edit it.
import { LRParser } from "@lezer/lr";
const spec_name = {
  __proto__: null,
  import: 24,
  as: 28,
  type: 34,
  alias: 76,
  foreign: 80,
  let: 92,
  in: 106,
  fn: 110,
  match: 118,
  with: 120,
  end: 124,
  do: 128,
  return: 142,
  if: 146,
  then: 148,
  else: 150,
  true: 174,
  false: 178,
  unit: 182,
};
export const parser = LRParser.deserialize({
  version: 14,
  states:
    "!(xOYQPOOO_QPO'#C_QdQQOOOrQPO'#C`OzQPO,58yOOQO'#Ed'#EdQdQQOOOOQO'#FQ'#FQOOQO'#DY'#DYOOQO'#FP'#FPOOQO'#Ee'#EeQgQQOOO!PQPO'#CgO!XQQO'#DQO!aQQO'#DTO!fQPO'#DXO!nQPO'#EbO!sQPO,58zO!{QPO1G.eOOQO-E8b-E8bOOQO-E8c-E8cO#TQQO'#C`O#rQSO'#CiO#wQQO,59RO$cQPO,59ROOQO'#Cn'#CnO$hQQO,59lO![QPO,59mOOQO'#DV'#DVO$|QPO,59oO%RQQO'#DWO%aQQO,59sO&eQPO,59sOOQO,5:|,5:|OOQO-E8`-E8`OOQO'#Ca'#CaO&jQQO'#CbOOQO'#Ew'#EwOOQO7+$P7+$PO&rQQO,58zO'aQPO,59TOOQO1G.m1G.mO'fQPO1G.mO'kQQO1G.mO(VQQO'#CoO([QPO1G.rO(dQQO1G/WO(uQPO1G/XOOQO1G/Z1G/ZO(}QQO'#FWO)`QPO'#CxOOQO'#Cv'#CvO)wQPO'#CvOOQO'#Cy'#CyO)|QPO'#FVO*bQQO'#C{OOQO'#FV'#FVOOQO'#FT'#FTOOQO,59r,59rO*jQQO'#D|OOQO'#D{'#D{O+kQQO'#D{O+sQQO'#FcO,qQQO'#FeO.dQQO'#EROOQO'#E]'#E]OOQO'#E['#E[O.nQQO'#E^OOQO'#Ff'#FfOOQO'#Fe'#FeO/XQQO'#F_OOQO'#Fc'#FcOOQO'#F_'#F_OOQO'#F['#F[O0SQQO'#DZO0_QPO'#DdO%aQQO'#DhO0dQPO'#DmO%aQQO'#DvO0iQQO'#FgOOQO'#EU'#EUOOQO'#EW'#EWOOQO'#EY'#EYOOQO1G/_1G/_O%aQQO1G/_OOQO'#Cd'#CdO1PQPO'#CcOOQO'#Cf'#CfOOQO'#Ez'#EzO1[QPO,58|OOQO1G.o1G.oOOQO'#Ck'#CkO1dQQO7+$XOOQO7+$X7+$XO'fQPO7+$XOOQO'#Cp'#CpO1{QPO,59ZOOQO'#Cr'#CrO2TQQO'#CqO2iQQO7+$^O2zQPO7+$^O3PQPO7+$^O3XQQO7+$sO3gQPO7+$sO3lQQO'#CxO4QQQO'#FVO4cQPO,59`O4hQPO,5;rOOQO,59c,59cOOQO'#Cx'#CxOOQO,59b,59bO%RQQO'#CzOOQO,59a,59aO4pQPO'#C}O4xQPO'#C|OOQO,59g,59gO4}QPO,59gO5VQPO,59jOOQO'#D|'#D|OOQO,5:g,5:gOOQO,5:v,5:vO5[QQO'#EOOOQO,5:i,5:iO5uQQO,5:kO5zQPO'#D|O6iQPO,5:oO6qQPO'#EQO7PQPO'#FeOOQO,5:m,5:mO7nQPO,5:mO7vQPO'#ESO7{QPO'#FcOOQO,5:x,5:xO8dQPO'#F_O8xQPO,5:xO%pQQO,5:fO9QQPO'#D_O9iQPO'#D^O9}QPO'#D^OOQO'#Da'#DaOOQO'#Db'#DbOOQO'#F]'#F]OOQO'#Ej'#EjO:SQQO,59uO:bQPO'#D]O:jQQO,5:OO:xQQO,5:SO:}QQO,5:XO;hQQO,5:bO;mQPO,5<ROOQO7+$y7+$yOOQO'#Ce'#CeOOQO,58},58}O;rQQO1G.hO;}QPO1G.hOOQO1G.h1G.hOOQO<<Gs<<GsO<VQQO<<GsO<nQQO1G.uO<vQPO1G.uOOQO1G.u1G.uO%RQQO'#CsOOQO,59],59]O2zQPO'#EiO=OQQO<<GxO=OQQO<<GxO2zQPO<<GxOOQO<<H_<<H_O3XQQO<<H_O%RQQO1G.zO=aQQO1G.zO=rQPO1G.zO=zQPO1G1^O>]QPO,59fO%RQQO,59hO>eQQO1G/RO>mQPO1G/ROOQO1G/R1G/RO>uQQO1G/UOOQO,5:j,5:jO>zQPO,5:jOOQO'#EQ'#EQOOQO1G0V1G0VO5uQQO1G0ZO?SQQO1G0XO?[QPO1G0XOOQO1G0X1G0XO0iQQO,5:nO?dQPO1G0dO?lQQO1G0dOOQO1G0d1G0dO@VQQO1G0QOATQQO'#D`OOQO,59x,59xOOQO'#D_'#D_OAcQPO,59xOOQO-E8h-E8hO%aQQO1G/aO%aQQO,59wOAwQPO,59wOA|QPO'#DfOBXQPO1G/jOBaQPO1G/jOBiQPO1G/nOBnQPO'#DpOCSQPO'#DsOOQO'#F`'#F`OC[QPO'#DoO0SQQO'#DqO0iQQO'#DtOCaQPO1G/sO%aQQO1G/|OOQO1G1m1G1mOOQO,5:},5:}OOQO7+$S7+$SOCfQQO7+$SOOQO-E8a-E8aOOQOAN=_AN=_OOQO,5;Q,5;QOOQO7+$a7+$aOCqQQO7+$aOOQO-E8d-E8dOCyQPO,59_OOQO,5;T,5;TOOQO-E8g-E8gODRQQOAN=dODRQQOAN=dOOQOAN=yAN=yODdQQO1G1^OOQO7+$f7+$fOOQO,5;R,5;RODuQPO7+$fODzQQO7+$fOOQO-E8e-E8eO%RQQO7+$fOE]QQO1G/QOEnQPO1G/QOOQO1G/Q1G/QOOQO1G/S1G/SOOQO'#C}'#C}OOQO,5;S,5;SOOQO7+$m7+$mOEvQQO7+$mOOQO-E8f-E8fOFOQPO7+$pOFWQPO1G0UOF`QQO1G0UOOQO1G0U1G0UOFyQPO7+%uOOQO,5;Z,5;ZOOQO7+%s7+%sOGRQQO7+%sOOQO-E8m-E8mOOQO1G0Y1G0YOGZQPO1G0QOOQO-E8l-E8lOGrQQO7+&OOOQO7+&O7+&OOOQO,5;Y,5;YOOQO,59z,59zOH]QPO,59zOOQO1G/d1G/dOOQO7+${7+${OOQO1G/c1G/cO%aQQO1G/cOOQO,5:Q,5:QOHeQQO'#DgO%aQQO7+%UOHsQPO7+%UOHxQQO7+%UOIWQPO7+%UOI`QPO7+%UOOQO'#Em'#EmOIhQQO7+%YO0SQQO'#DkO:}QQO,5:_O0iQQO,5:ZOIpQPO'#DrOIxQPO,5:]OOQO,5:`,5:`OOQO7+%_7+%_OI}QQO7+%hOOQO<<Gn<<GnP&jQQO'#EcOOQO<<G{<<G{P(VQQO'#EfOJSQQO1G.yOJeQPO1G.yOOQO1G.y1G.yOJmQQOG23OO%RQQO<<HQOKOQPO<<HQP%RQQO'#EgOOQO<<HQ<<HQOOQO7+$l7+$lOKTQQO7+$lOOQO<<HX<<HXP>uQQO'#EhOKfQQO<<H[OKnQPO<<H[OOQO<<H[<<H[OKvQQO7+%pOOQO7+%p7+%pOLaQQO<<IaOLiQPO<<IaOOQO<<Ia<<IaOOQO<<I_<<I_P5uQQO'#EoP0iQQO'#EnOOQO<<Ij<<IjOLqQQO1G/fOMPQPO1G/fOOQO1G/f1G/fOOQO7+$}7+$}O%RQQO'#FWOOQO,5:R,5:ROOQO<<Hp<<HpO%aQQO<<HpOOQO,5;W,5;WOMXQPO<<HpOMaQQO<<HpOOQO-E8j-E8jOMoQPO<<HpOOQO-E8k-E8kOOQO<<Ht<<HtOMtQPO,5:VOOQO1G/y1G/yOMyQPO1G/uOOQO,5:^,5:^O0iQQO1G/wO%aQQO<<ISOOQO7+$e7+$eONOQQO7+$eOOQOAN=lAN=lO%RQQOAN=lOOQO<<HW<<HWOOQOAN=vAN=vONaQQOAN=vOOQO<<I[<<I[OOQOAN>{AN>{ONiQQOAN>{OOQO,5;V,5;VOOQO7+%Q7+%QONqQQO7+%QOOQO-E8i-E8iO! PQPO,5;rOOQOAN>[AN>[O%aQQOAN>[O! UQPOAN>[O! ZQPOAN>[P0SQQO'#ElO%aQQO1G/qO:}QQO7+%aO! cQPO7+%cOOQOAN>nAN>nOOQO<<HP<<HPOOQOG23WG23WOOQOG23bG23bOOQOG24gG24gOOQO<<Hl<<HlP0SQQO'#EkOOQO1G1^1G1^OOQOG23vG23vO%aQQOG23vO! hQPOG23vOOQO7+%]7+%]OOQO<<H{<<H{O:}QQO<<H}OOQOLD)bLD)bO%aQQOLD)bOOQOAN>iAN>iOOQO!$'L|!$'L|O3XQQO'#DWO! mQPO,5;rO0xQQO,5:fO3XQQO1G.zO0iQQO1G/aO3XQQO7+$fO0iQQO7+%UO3XQQO<<HQO0iQQO<<HpO0iQQO<<ISO3XQQOAN=lO0iQQOAN>[O0iQQOG23vO0iQQOLD)bO! uQQO'#FWO!!WQPO,59`O!!]QQO,59uO!!kQPO1G/jO!!sQPO7+$fO!!xQPO7+%UO!!}QPO7+%UO!#VQQO7+%hO!#[QPO<<HQO!#aQPO<<HpO!#iQPO<<HpO!#nQPOAN>[O!#sQPOAN>[O!#{QPOG23vO0SQQO'#DZO!$QQQO,5:OO!$`QQO1G.zO!$qQPO1G.zO!$yQPO1G/jO%aQQO1G/|O!%RQQO7+$fO!%dQQO7+%UO!%rQPO7+%UO!%zQQO<<HpO!&YQPO'#DdO!&_QQO,5:bO%aQQO'#Dv",
  stateData:
    "!&g~O#fOSPOS~O#gPO~O#hRO~O[[Oa]Ox^O#oWO~O#i`O#jSX~O#jbO~O#heO#mfO~OvkO#hiO~O#olO~O#uoO#|nO~O#hqO~O#i`O#jSa~O#lsO#mtO~O#i`O[SX^SXaSXxSX#dSX#lSX#mSX#oSX~O#rxO~O^zO#lsO#mtO[ZaaZaxZa#dZa#oZa~O#heO~O#m|O#u}Oataxta#dta#ota~O#|)SO~O#h!SO#m!RO#o!VO#{!XO~O!O!lO!X!mO!]!nO!b!oO!k!pO!y!rO!{!sO!}!tO#R!fO#S!fO#T!fO#h!]O#m!qO#o!cO#{!bO$[!eO~O#u!vO~O#h!wO#o!yO~O#i`O[Sa^SaaSaxSa#dSa#lSa#mSa#oSa~O#q!|O~O#h!}O~O^#QO#lsO#mtO[ZiaZixZi#dZi#oZi~O#o#RO~O#h#TO#v#WO~O#u#XOatixti#dti#oti~O#m|O#u#YO~O#h!SO#m!RO#o!VO#q#^O#{!XO~O#i#`O#mlX#ulX#plX#qlX#}lX#xlX~O#h#aO~O#m#cO#u#yX#p#yX#q#yX#}#yX#x#yX~O#o#eO#}#gO~O#i#`Oa!pXx!pX#d!pX#m!pX#o!pX$W!pX!^!pX!l!pX!V!pX#h!pX$Q!pX!m!pX!`!pX#v!pX~O#h#jO#o!cO~O#m#mOa$VXx$VX#d$VX#o$VX$W$VX!^$VX!l$VX!V$VX#h$VX$Q$VX!m$VX!`$VX#v$VX~O#i#oOa$XXx$XX#d$XX#m$XX#o$XX$W$XX!^$XX!l$XX!V$XX#h$XX$Q$XX!m$XX!`$XX#v$XX~O!y!rO!{!sO!}!tO#R!fO#S!fO#T!fO#h#pO#m!qO#{!bO$[!eO~O#o#rO#}#tO~P-rO!O)pO!X)zO!]!nO!b!oO!k)|O#o!cO$]#xO~P-rO$W#{Oa$RXx$RX#d$RX#o$RX!^$RX!l$RX!V$RX#h$RX$Q$RX!m$RX!`$RX#v$RX~O#h#|O#o$PO$Q$QO~O#m$VO~O#{$XO~O!O)pO!X)zO!]!nO!b!oO!k)|O#o!cO~P-rO#l$]O#pVX#qVX~O#p$_O#q$aO~O#lsO#mtO[ZqaZqxZq#dZq#oZq~O#p$dO#q$fO~O#m$gOaeXxeX#deX#oeX#veX~O#v$iOa`qx`q#d`q#o`q~O#h#TO~O#h#TO#v$lO~O#h#[O#m)bO#o!VO#{!XO~O#u$nO~O#i#`OalXxlX#dlX#mlX#olX~O#m#cOa#yXx#yX#d#yX#o#yX~O#x$oO~O#p$pO#q$rO~O#vsX#|qX~O#|$tO~O#p$uO#}$wO~O#v$xO~O!O)pO!X)zO!]!nO!b!oO!k)|O#o!cO#q$yO~P-rO#o${O~O#i#`O#m!pX#v!pX#p!pX$W!pX$]!pX#q!pX#}!pX$U!pX~O#m#mO#v$}O~O#i#PX#m#PX#u!tX#v#PX~O#i#oO#m$XX#v$XX#p$XX$W$XX$]$XX#q$XX#}$XX$U$XX~O#p%OO#}%QO~O#u%RO~O#m#mO#p$VX$W$VX$]$VX#q$VX#}$VX$U$VX~O$W)UO#p$RX$]$RX#q$RX#}$RX$U$RX~O#p%TO$]%UO~O#i#`O#m!RX#u!RX#|!RX#p!RX#q!RX#x!RX~O#m%WO#u!QX#|!QX#p!QX#q!QX#x!QX~O#h%YO~O!V%]O#h#|O#o$PO$Q$QO~O#u%^O#|nO~O#h#|O#o$PO#q%aO$Q$QO~O!^%cO~O!O%hO!X)zO!]!nO!b!oO!i%iO!k)|O#o%dO~P-rO!l%kO~O#q%lO~O#h!wO#o!yO#q%nO~O#p%oO#q%nO~O#lsO#mtO[ZyaZyxZy#dZy#oZy~O#o#RO#q%sO~O#p%tO#q%sO~O#v$iOa`yx`y#d`y#o`y~O#h!SO#m!RO#o!VO#q&PO#{!XO~O#p&QO#q&PO~O#x&SO#u#zi#p#zi#q#zi#}#zi~O#p&TO#q&VO~O#o&XO#}&ZO~O#p&[O#}&ZO~O#o&XO~O#p&`O#q&aO~O#o${O#}&dO~O#p&eO#}&dO~O#p&jO$]&kO~O!O)pO!X)zO!]!nO!b!oO!k)|O#o!cO$]&kO~P-rO#m#mOa!nix!ni#d!ni#o!ni$W!ni!^!ni!l!ni!V!ni#h!ni$Q!ni!m!ni!`!ni#v!ni~O#h#|O#o$PO#q&mO$Q$QO~O#m%WO#u!Qa#|!Qa#p!Qa#q!Qa#x!Qa~O#u&rO~O#|nO#p!YX#q!YX~O#x&uO#|&tO~O#p&wO#q&yO~O#v&|O~O#i#PX#m#PX#}#PX$T!dX$U#PX$W#PX~O$U&}O#}!gX~O$T'OO~O#}'SO~O#h!wO#o!yO#q'UO~O#o#RO#q'WO~O#p'YO#q'[O~O#v$iOa`!Rx`!R#d`!R#o`!R~O#x)XOa#zix#zi#d#zi#o#zi~O#x'^O~O#h!SO#m!RO#o!VO#q'_O#{!XO~O#h!SO#m!RO#o!VO#q'bO#{!XO~O#p'cO#q'bO~O#o&XO#}'dO~O#p'fO#}'hO~O#p'iO#q'jO~O!O)pO!X)zO!]!nO!b!oO!k)|O#o!cO#q'jO~P-rO#p'kO#}'mO~O#o${O#}'nO~O#m#mO#p!ni$W!ni$]!ni#q!ni#}!ni$U!ni~O!O)pO!X)zO!]!nO!b!oO!k)|O#o!cO$]'qO~P-rO#p'rO#q'tO~O#h!SO#m'vO#o!VO#{!XO~O#x'yO~O#h#|O#o$PO#q'{O$Q$QO~O#p'|O#q'{O~O#x'yO#|&tO~O!`(QO#v&|O~O#|nO#u!fX~O#u(VO~O!m(WO~O#h!SO#m!RO#o!VO#q(XO#{!XO~O#p(YO#q(XO~O#v$iOa`!Zx`!Z#d`!Z#o`!Z~O#x([O~O#h!SO#m!RO#o!VO#q(]O#{!XO~O#o&XO#}(^O~O#p(_O#}(^O~O!O)pO!X)zO!]!nO!b!oO!k)|O#o!cO#q(`O~P-rO#o${O#}(aO~O#p(bO#}(aO~O#h#|O#o$PO#q(dO$Q$QO~O#p(eO#q(dO~O#x(iO#|&tO~O#h#|O#o$PO#q(kO$Q$QO~O#x(iO~O#x(mO~O$U(nO~O#h!SO#m!RO#o!VO#q(qO#{!XO~O#o&XO#}(sO~O#o${O#}(tO~O#h#|O#o$PO#q(uO$Q$QO~O#q(wO~O#x(yO~O#x(yO#|&tO~O$U(}O~O#x)PO~O#p)rO#q%|O~O#h!SO#m!RO#o!VO#q)cO#{!XO~O#x)VO~O!V)WO#h#|O#o$PO$Q$QO~O#x)YO#|&tO~O#x)ZO~O#x)[O~O#x)[O#|&tO~O!m)]O~O#x)^O~O#x)_O#|&tO~O#x)_O~O#x)`O~O#x)`O#|&tO~O#x)aO~O#h#|O#o$PO#q)eO$Q$QO~O#h!SO#m!RO#o!VO#q)fO#{!XO~O#p)vO#q)fO~O#p)wO#q)hO~O#h!SO#m!RO#o!VO#q)jO#{!XO~O#h#|O#o$PO#q)kO$Q$QO~O#p)yO#q)kO~O#h#|O#o$PO#q)nO$Q$QO~O#m)qO~O!l)uO~O#T#S~",
  goto: "BZ$[PPP$]$`$i$i$p$v$|$p%PP%TP%W%^P%c%i%o%w&U&]&`&}'m(_*a'm+S&}+W+e&}+n%^+qP+qP+v+y+q,Y,_P-V-]-p.W-]-]P.^P/Y/g.^PP0PP.^P0T0Z0T0a0T0TP.^PPP0d1`2_3a4`3a4g3a4s3a3aP3aP3aP3a5Q3aPPP6S6^6d6j6q6w7Z7e7s7}8T8_8e8oPPPPPPP8yPP9YPPPP9b+qPP9gP:p&}PPP;b=[P=y>wPP?TP@RAY3aRQOQSPQg[R{hZubg{#O$cX!zt$_%o'VX!xt$_%o'VR$^!xTTQURh[Q#OzR$c#QVVQUZQj]R!PkQ!OjR#Z!PQ#S|V%r$d%t'XQ#V}S$k#W#XQ%w$iR%z$lZ#U}#W#X$i$lR$h#U!X!Zn!R#Y#c$g$n$o$p$t&Q&S&T'Y'^'`'c'v(Y([)S)V)X)Z)^)b)r)v!Z!Yn!R#Y#c$g$n$o$p$t&Q&S&T&t'Y'^'`'c'v(Y([)S)V)X)Z)^)b)r)vz!Wn!R#c$g$o$p$t&Q&S&T&t'Y'^'`'c'v(Y([)b)r)v_#]#Y$n)S)V)X)Z)^!Y!Un!R#Y#c$g$n$o$p$t&Q&S&T&t'Y'^'`'c'v(Y([)S)V)X)Z)^)b)r)v!x!_o!b!e!n!p!q!v#m#{$X%R%T%]%^%i%k&`&j&r&u&}'O'i'p'y(V(W(i(m(n(y(})P)U)W)Y)[)])_)`)a)u)|s$O!l$T$V%W%h&w&|'r'|(e(l(v)d)p)q)w)y!Y!Tn!R#Y#c$g$n$o$p$t&Q&S&T&t'Y'^'`'c'v(Y([)S)V)X)Z)^)b)r)vR#b!UT#d!W#]Q#h!XY&Y$u&['e'f(_R&^$x_#f!X$u$x&['e'f(_R#i!XVXQUZRm^Qp_Q!QmQ%_$UQ&s%`R(U'PV_QUZ!k!ko!e!n!p!q!v#m%R%T%]%^%i%k&`&j&r&u'O'i'p'y(V(W(i(m(y)P)W)Y)[)])_)`)a)u)|X$S!l$T)d)ps$R!l$T$V%W%h&w&|'r'|(e(l(v)d)p)q)w)yr#}!l$T$V%W%h&w&|'r'|(e(l(v)d)p)q)w)yR%Z$OQ%X#}R&o%Z!s!jo!e!n!p!q!v#m$X%R%T%]%^%i%k&`&j&r&u&}'O'i'p'y(V(W(i(m(n(y(})P)W)Y)[)])_)`)a)u)|Q%b$VY'z&w'|(l)w)yR)t)qQ&v%aQ(O&yQ(j'{Q(z(kQ)g)eQ)l)hQ)m)kR)o)nT&z%c&{X%f$X&}(n(}X%g$X&}(n(}R'Q%h!s!io!e!n!p!q!v#m$X%R%T%]%^%i%k&`&j&r&u&}'O'i'p'y(V(W(i(m(n(y(})P)W)Y)[)])_)`)a)u)|!y!go!b!e!n!p!q!v#m#{$X%R%T%]%^%i%k&`&j&r&u&}'O'i'p'y(V(W(i(m(n(y(})P)U)W)Y)[)])_)`)a)u)|!x!^o!b!e!n!p!q!v#m#{$X%R%T%]%^%i%k&`&j&r&u&}'O'i'p'y(V(W(i(m(n(y(})P)U)W)Y)[)])_)`)a)u)|R#k!_!y!fo!b!e!n!p!q!v#m#{$X%R%T%]%^%i%k&`&j&r&u&}'O'i'p'y(V(W(i(m(n(y(})P)U)W)Y)[)])_)`)a)u)|Z#n!`#q#w%V&h^#v!b$}%O&e'k'o(bR$|#oQ#u!bQ&b$}Z&c%O&e'k'o(b!x!do!b!e!n!p!q!v#m#{$X%R%T%]%^%i%k&`&j&r&u&}'O'i'p'y(V(W(i(m(n(y(})P)U)W)Y)[)])_)`)a)u)|R#l!_QaRSrawRweQ$`!{R%p$`QUQRcUSZQURdZQ$e#SR%u$eQ$q#_W&R$q&U'Z)sQ&U$sQ'Z%vR)s)TQ$v#hS&]$v'gR'g&^Q$j#VU%x$j%y']Q%y$kR']%zQ$T!lS%[$T)dR)d)pQ's&nR(f'sQ&x%bS'}&x)xR)x)tQ&{%cR(P&{Q%S#zQ&_$zT&i%S&_Q%P#uS&f%P'lR'l&bQvbQygQ#P{Q$b#OR%q$cQ!{tV%m$_%o'VVYQUZS![n)SQ#_!RQ$m#YQ$s#cQ%v$gQ%{$nS%}$o)Vb&O$p&Q&T'Y'`'c(Y)r)vQ&W$tS'a&S)XS(Z'^)ZQ(g'vS(r([)^R)T)b!W!Zn!R#Y#c$g$n$o$p$t&Q&S&T'Y'^'`'c'v(Y([)S)V)X)Z)^)b)r)vR'w&tQ!uoQ#z!eQ$W!nQ$Y!pQ$Z!qQ$[!vQ$z#mQ&g%RY&l%T&`&j'i'pS&p%])WQ&q%^Q'R%iQ'T%kQ'u&rS'x&u)YQ(T'OS(h'y)[Q(o(VS(p(W)]S(x(i)_Q({(mS)O(y)`S)R)P)aQ)i)uR){)|W$U!l$T)d)p^%`$V&w'|(l)q)w)yQ&n%WQ'P%hQ(R&|V(c'r(e(v!j!ko!e!n!p!q!v#m%R%T%]%^%i%k&`&j&r&u'O'i'p'y(V(W(i(m(y)P)W)Y)[)])_)`)a)u)|X%e$X&}(n(}Q%j$XQ(S&}Q(|(nR)Q(}r!ho!n!p!v%]%^%k&r&u'y(W(i(m(y)P)u)|!P#y!e!q#m$X%R%T%i&`&j&}'O'i'p(V(n(})W)Y)[)])_)`)ar!`o!n!p!v%]%^%k&r&u'y(W(i(m(y)P)u)|Q#q!b!O#w!e!q#m$X%R%T%i&`&j&}'O'i'p(V(n(})W)Y)[)])_)`)aQ%V#{R&h)Ut!ao!n!p!v#{%]%^%k&r&u'y(W(i(m(y)P)u)|!T#s!b!e!q#m$X%R%T%i&`&j&}'O'i'p(V(n(})U)W)Y)[)])_)`)a",
  nodeNames:
    "⚠ Comment SourceFile ModuleHeader ModuleName ExposingEverything ExposingList ExposingListItemType ExposingListItemTypeName ExposingListItemTypeConstructors ExposingListItemValue ModuleImport import ModuleImportPackage as ModuleImportAlias TypeDeclaration type TypeDeclarationName TypeDeclarationVariables TypeDeclarationVariable TypeDeclarationConstructor TypeDeclarationConstructorName TypeDeclarationConstructorFields TypeFunction TypeCall TypeConstructor Qualifier TypeConstructorProperName TypeVariable TypeCallArguments TypeClosedRecord TypeRecordField TypeRecordFieldLabel TypeOpenRecord TypeOpenRecordRowVariable TypeDeclarationEmpty TypeAliasDeclaration alias ForeignValueDeclaration foreign ForeignValueDeclarationName TypeAnnotation ValueDeclaration ValueDeclarationName ExpressionLet let ExpressionLetValueDeclaration PatternConstructor PatternConstructorProperName PatternConstructorFields PatternVariable PatternUnused in ExpressionFunction fn ExpressionFunctionParameter ReturnTypeAnnotation ExpressionMatch match with ExpressionMatchArm end ExpressionEffect do ExpressionEffectBind ExpressionEffectBindName ExpressionEffectLet ExpressionEffectLetBinder ExpressionEffectExpression ExpressionEffectReturn return ExpressionIf if then else ExpressionRightPipe ExpressionConstructor ExpressionConstructorProperName ExpressionCall ExpressionCallArguments ExpressionRecordAccess ExpressionRecordFieldLabel ExpressionRecord ExpressionRecordField ExpressionRecordUpdate ExpressionTrue true ExpressionFalse false ExpressionUnit unit ExpressionVariable ExpressionVariableName ExpressionArray ExpressionString ExpressionInt ExpressionFloat",
  maxTerm: 151,
  skippedNodes: [0, 1],
  repeatNodeCount: 14,
  tokenData:
    "2n~RqX^#Ypq#Yrs#}xy%Xyz%r|}%w}!O%|!O!P&s!Q![&x![!]'o!]!^'t!^!_'y!_!`(U!c!}(Z!}#O(l#P#Q(q#R#S(v#T#X)X#X#Y*c#Y#a)X#a#b.k#b#o)X#o#p2V#p#q2[#q#r2i#y#z#Y$f$g#Y#BY#BZ#Y$IS$I_#Y$I|$JO#Y$JT$JU#Y$KV$KW#Y&FU&FV#Y~#_Y#f~X^#Ypq#Y#y#z#Y$f$g#Y#BY#BZ#Y$IS$I_#Y$I|$JO#Y$JT$JU#Y$KV$KW#Y&FU&FV#Y~$QVOr#}rs$gs#O#}#O#P$l#P;'S#};'S;=`%R<%lO#}~$lO#R~~$oP#O#P$r~$uSOY#}Z;'S#};'S;=`%R<%lO#}~%UP;=`<%l#}~%^P#m~!O!P%a~%dP!O!P%g~%jPyz%m~%rO#l~~%wO#q~~%|O#p~~&PQ}!O&V!`!a&n~&[SP~OY&VZ;'S&V;'S;=`&h<%lO&V~&kP;=`<%l&V~&sO#x~~&xO#i~~&}R#S~!Q![&x#O#P'W#R#S&x~'ZP!O!P'^~'aP!Q!['d~'iQ#T~!Q!['d#R#S'd~'tO#|~~'yO$U~~'|P}!O(P~(UO$T~~(ZO#u~~(`S#h~!Q![(Z!c!}(Z#R#S(Z#T#o(Z~(qO$[~~(vO$]~~({S$Q~!Q![(v!c!}(v#R#S(v#T#o(vU)`T#oQ#rS}!O)o!Q![)X!c!})X#R#S*Q#T#o)XS)tS#rS}!O)o!Q![)o!c!})o#T#o)oQ*VS#oQ!Q![*Q!c!}*Q#R#S*Q#T#o*QV*jV#oQ#rS}!O)o!Q![)X!c!})X#R#S*Q#T#l)X#l#m+P#m#o)XV+WV#oQ#rS}!O)o!Q![)X!c!})X#R#S*Q#T#d)X#d#e+m#e#o)XV+tV#oQ#rS}!O)o!Q![)X!c!})X#R#S*Q#T#c)X#c#d,Z#d#o)XV,bV#oQ#rS}!O)o!Q![)X!c!})X#R#S*Q#T#f)X#f#g,w#g#o)XV-OV#oQ#rS}!O)o!Q![)X!c!})X#R#S*Q#T#h)X#h#i-e#i#o)XV-lV#oQ#rS}!O)o!Q![)X!c!})X#R#S*Q#T#g)X#g#h.R#h#o)XV.[T#jP#oQ#rS}!O)o!Q![)X!c!})X#R#S*Q#T#o)XV.rV#oQ#rS}!O)o!Q![)X!c!})X#R#S*Q#T#c)X#c#d/X#d#o)XV/`V#oQ#rS}!O)o!Q![)X!c!})X#R#S*Q#T#W)X#W#X/u#X#o)XV/|V#oQ#rS}!O)o!Q![)X!c!})X#R#S*Q#T#i)X#i#j0c#j#o)XV0jV#oQ#rS}!O)o!Q![)X!c!})X#R#S*Q#T#`)X#`#a1P#a#o)XV1WV#oQ#rS}!O)o!Q![)X!c!})X#R#S*Q#T#X)X#X#Y1m#Y#o)XV1vT#gP#oQ#rS}!O)o!Q![)X!c!})X#R#S*Q#T#o)X~2[O#{~~2aP#v~!`!a2d~2iO$W~~2nO#}~",
  tokenizers: [0, 1, 2],
  topRules: { SourceFile: [0, 2] },
  specialized: [{ term: 123, get: (value) => spec_name[value] || -1 }],
  tokenPrec: 2366,
  termNames: {
    0: "⚠",
    1: "Comment",
    2: "@top",
    3: "ModuleHeader",
    4: "ModuleName",
    5: "ExposingEverything",
    6: "ExposingList",
    7: "ExposingListItemType",
    8: "ExposingListItemTypeName",
    9: "ExposingListItemTypeConstructors",
    10: "ExposingListItemValue",
    11: "ModuleImport",
    12: 'name/"import"',
    13: "ModuleImportPackage",
    14: 'name/"as"',
    15: "ModuleImportAlias",
    16: "TypeDeclaration",
    17: 'name/"type"',
    18: "TypeDeclarationName",
    19: "TypeDeclarationVariables",
    20: "TypeDeclarationVariable",
    21: "TypeDeclarationConstructor",
    22: "TypeDeclarationConstructorName",
    23: "TypeDeclarationConstructorFields",
    24: "TypeFunction",
    25: "TypeCall",
    26: "TypeConstructor",
    27: "Qualifier",
    28: "TypeConstructorProperName",
    29: "TypeVariable",
    30: "TypeCallArguments",
    31: "TypeClosedRecord",
    32: "TypeRecordField",
    33: "TypeRecordFieldLabel",
    34: "TypeOpenRecord",
    35: "TypeOpenRecordRowVariable",
    36: "TypeDeclarationEmpty",
    37: "TypeAliasDeclaration",
    38: 'name/"alias"',
    39: "ForeignValueDeclaration",
    40: 'name/"foreign"',
    41: "ForeignValueDeclarationName",
    42: "TypeAnnotation",
    43: "ValueDeclaration",
    44: "ValueDeclarationName",
    45: "ExpressionLet",
    46: 'name/"let"',
    47: "ExpressionLetValueDeclaration",
    48: "PatternConstructor",
    49: "PatternConstructorProperName",
    50: "PatternConstructorFields",
    51: "PatternVariable",
    52: "PatternUnused",
    53: 'name/"in"',
    54: "ExpressionFunction",
    55: 'name/"fn"',
    56: "ExpressionFunctionParameter",
    57: "ReturnTypeAnnotation",
    58: "ExpressionMatch",
    59: 'name/"match"',
    60: 'name/"with"',
    61: "ExpressionMatchArm",
    62: 'name/"end"',
    63: "ExpressionEffect",
    64: 'name/"do"',
    65: "ExpressionEffectBind",
    66: "ExpressionEffectBindName",
    67: "ExpressionEffectLet",
    68: "ExpressionEffectLetBinder",
    69: "ExpressionEffectExpression",
    70: "ExpressionEffectReturn",
    71: 'name/"return"',
    72: "ExpressionIf",
    73: 'name/"if"',
    74: 'name/"then"',
    75: 'name/"else"',
    76: "ExpressionRightPipe",
    77: "ExpressionConstructor",
    78: "ExpressionConstructorProperName",
    79: "ExpressionCall",
    80: "ExpressionCallArguments",
    81: "ExpressionRecordAccess",
    82: "ExpressionRecordFieldLabel",
    83: "ExpressionRecord",
    84: "ExpressionRecordField",
    85: "ExpressionRecordUpdate",
    86: "ExpressionTrue",
    87: 'name/"true"',
    88: "ExpressionFalse",
    89: 'name/"false"',
    90: "ExpressionUnit",
    91: 'name/"unit"',
    92: "ExpressionVariable",
    93: "ExpressionVariableName",
    94: "ExpressionArray",
    95: "ExpressionString",
    96: "ExpressionInt",
    97: "ExpressionFloat",
    98: '("." properName)+',
    99: '("," exposingListItem)+',
    100: "ModuleImport+",
    101: "moduleDeclaration+",
    102: '("," TypeDeclarationVariable)+',
    103: '("," type)+',
    104: '("," TypeRecordField)+',
    105: '("|" TypeDeclarationConstructor)+',
    106: "ExpressionLetValueDeclaration+",
    107: '("," pattern)+',
    108: '("," ExpressionFunctionParameter)+',
    109: "ExpressionMatchArm+",
    110: '("," expression)+',
    111: '("," ExpressionRecordField)+',
    112: "␄",
    113: "%mainskip",
    114: "space",
    115: '"module"',
    116: "properName",
    117: '"."',
    118: '"exports"',
    119: "exposing",
    120: "everything",
    121: '"("',
    122: "exposingListItem",
    123: "name",
    124: '","',
    125: '")"',
    126: "packageName",
    127: "moduleDeclaration",
    128: "typeDeclaration",
    129: '"="',
    130: '"|"',
    131: "type",
    132: '"->"',
    133: "type1",
    134: "typeParens",
    135: '"{"',
    136: '":"',
    137: '"}"',
    138: "expression4",
    139: "pattern",
    140: "unusedName",
    141: "expression3",
    142: "expressionEffectStatement",
    143: '"<-"',
    144: '";"',
    145: "expression2",
    146: '"|>"',
    147: "expression1",
    148: "expression0",
    149: "expressionParens",
    150: '"["',
    151: '"]"',
  },
});
